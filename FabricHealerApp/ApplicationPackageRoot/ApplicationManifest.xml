<?xml version="1.0" encoding="utf-8"?>
<ApplicationManifest xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ApplicationTypeName="FabricHealerType" ApplicationTypeVersion="1.2.13" xmlns="http://schemas.microsoft.com/2011/01/fabric">
  <Parameters>
    <!-- FabricHealerManager Settings  -->
    <Parameter Name="AutoMitigationEnabled" DefaultValue="true" />
    <Parameter Name="EnableETW" DefaultValue="false" />
    <Parameter Name="HealthCheckIntervalInSeconds" DefaultValue="30" />
    <!-- If set to true, then FH will emit log events containing the full text of the logic rule with the currently executing external repair predicate.
         This is extremely useful for both debugging and auditing repair rules. -->
    <Parameter Name="EnableLogicRuleTracing" DefaultValue="true" />
    <Parameter Name="EnableTelemetry" DefaultValue="false" />
    <Parameter Name="EnableVerboseLogging" DefaultValue="true" />
    <Parameter Name="OperationalTelemetryEnabled" DefaultValue="true" />
    <Parameter Name="LocalLogPath" DefaultValue="fabric_healer_logs" />
    <!-- Repair Policy Enablement -->
    <Parameter Name="EnableAppRepair" DefaultValue="true" />
    <Parameter Name="EnableDiskRepair" DefaultValue="false" />
    <Parameter Name="EnableFabricNodeRepair" DefaultValue="false" />
    <Parameter Name="EnableMachineRepair" DefaultValue="false" />
    <Parameter Name="EnableReplicaRepair" DefaultValue="false" />
    <!-- This means FH will apply some mitigation (restarts) to all instances of a target service on a node-by-node basis only (rolling).
         This only makes sense when you deploy FH to multiple nodes. -->
    <Parameter Name="EnableRollingServiceRestarts" DefaultValue="true" />
    <Parameter Name="EnableSystemServiceRepair" DefaultValue="false" />
    <!-- Logic rule files -->
    <Parameter Name="AppRulesConfigurationFile" DefaultValue="AppRules.guan" />
    <Parameter Name="DiskRulesConfigurationFile" DefaultValue="DiskRules.guan" />
    <Parameter Name="FabricNodeRulesConfigurationFile" DefaultValue="FabricNodeRules.guan" />
    <Parameter Name="MachineRulesConfigurationFile" DefaultValue="MachineRules.guan" />
    <Parameter Name="ReplicaRulesConfigurationFile" DefaultValue="ReplicaRules.guan" />
    <Parameter Name="SystemServiceRulesConfigurationFile" DefaultValue="SystemServiceRules.guan" />
    <!-- If set, will override values used in *machine repair* logic rules where a related predicate requires this fact to be specified as an argument. 
		 Period/Duration values are represented as TimeSpan strings. E.g., "00:30:00" for 30 minutes. MaxOutstandingRepairs is a whole number. -->
    <Parameter Name="MachineRepairMinHealthStateDuration" DefaultValue="" />
    <Parameter Name="MachineRepairScheduleInterval" DefaultValue="" />
    <Parameter Name="MachineRepairNodeProbationPeriod" DefaultValue="" />
    <Parameter Name="MachineRepairMaxOutstandingRepairs" DefaultValue="" />
    <!--flags for enabling plugin support-->
    <Parameter Name="EnableCustomRepairPredicateType" DefaultValue="false" />
    <Parameter Name="EnableCustomServiceInitializers" DefaultValue="false" />
  </Parameters>
  <!-- Import the ServiceManifest from the ServicePackage. The ServiceManifestName and ServiceManifestVersion 
       should match the Name and Version attributes of the ServiceManifest element defined in the 
       ServiceManifest.xml file. -->
  <ServiceManifestImport>
    <ServiceManifestRef ServiceManifestName="FabricHealerPkg" ServiceManifestVersion="1.2.13" />
    <ConfigOverrides>
      <ConfigOverride Name="Config">
        <Settings>
          <!-- FabricHealerManager -->
          <Section Name="RepairManagerConfiguration">
            <Parameter Name="HealthCheckIntervalInSeconds" Value="[HealthCheckIntervalInSeconds]" />
            <Parameter Name="EnableAutoMitigation" Value="[AutoMitigationEnabled]" />
            <Parameter Name="EnableETW" Value="[EnableETW]" />
            <Parameter Name="EnableTelemetry" Value="[EnableTelemetry]" />
            <Parameter Name="EnableVerboseLogging" Value="[EnableVerboseLogging]" />
            <Parameter Name="EnableOperationalTelemetry" Value="[OperationalTelemetryEnabled]" />
            <Parameter Name="EnableRollingServiceRestarts" Value="[EnableRollingServiceRestarts]" />
            <Parameter Name="LocalLogPath" Value="[LocalLogPath]" />
            <Parameter Name="EnableLogicRuleTracing" Value="[EnableLogicRuleTracing]" />
            <Parameter Name="EnableCustomServiceInitializers" Value="[EnableCustomServiceInitializers]" />
            <Parameter Name="EnableCustomRepairPredicateType" Value="[EnableCustomRepairPredicateType]" />
          </Section>
          <!-- Repair policies -->
          <Section Name="AppRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableAppRepair]" />
            <Parameter Name="LogicRulesConfigurationFile" Value="[AppRulesConfigurationFile]" />
          </Section>
          <Section Name="DiskRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableDiskRepair]" />
            <Parameter Name="LogicRulesConfigurationFile" Value="[DiskRulesConfigurationFile]" />
          </Section>
          <Section Name="FabricNodeRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableFabricNodeRepair]" />
            <Parameter Name="LogicRulesConfigurationFile" Value="[FabricNodeRulesConfigurationFile]" />
          </Section>
          <Section Name="ReplicaRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableReplicaRepair]" />
            <Parameter Name="LogicRulesConfigurationFile" Value="[ReplicaRulesConfigurationFile]" />
          </Section>
          <Section Name="SystemServiceRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableSystemServiceRepair]" />
            <Parameter Name="LogicRulesConfigurationFile" Value="[SystemServiceRulesConfigurationFile]" />
          </Section>
          <Section Name="MachineRepairPolicy">
            <Parameter Name="Enabled" Value="[EnableMachineRepair]" />
            <Parameter Name="LogicRulesConfigurationFile" Value="[MachineRulesConfigurationFile]" />
            <Parameter Name="MaxOutstandingRepairs" Value="[MachineRepairMaxOutstandingRepairs]" />
            <Parameter Name="MinHealthStateDuration" Value="[MachineRepairMinHealthStateDuration]" />
            <Parameter Name="NodeProbationPeriod" Value="[MachineRepairNodeProbationPeriod]" />
            <Parameter Name="ScheduleInterval" Value="[MachineRepairScheduleInterval]" />
          </Section>
        </Settings>
      </ConfigOverride>
    </ConfigOverrides>
    <!-- Because of certain actions FabricHealer takes in a cluster (deleting files or restarting system service processes running at higher elevation than FabricHealer, for example), 
         FH may need to run as System user on Windows and root on Linux. Note that you should test FH out NOT running as System and validate that it works for your scenarios.
         For repairs that require SF API calls (RestartCodePackage, RestartReplica, etc) or simply schedule infrastructure repairs via RM (see MachineRules.guan), FH can (and therefore should) 
         run as default user (that is Network Service on Windows, sfappsuser on Linux).
    <Policies>
      <RunAsPolicy CodePackageRef="Code" UserRef="SystemUser" />
    </Policies> -->
  </ServiceManifestImport>
  <Principals>
    <Users>
      <!-- LocalSystem AccountType maps to System on Windows and root on Linux. -->
      <User Name="SystemUser" AccountType="LocalSystem" />
    </Users>
  </Principals>
</ApplicationManifest>